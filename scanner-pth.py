import socket
import sys
from concurrent.futures import ThreadPoolExecutor, as_completed
from tqdm import tqdm  # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –∫–æ–Ω—Å–æ–ª–∏

# –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
target_host = input("üîç –í–≤–µ–¥–∏—Ç–µ IP –∏–ª–∏ –¥–æ–º–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤: ")

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è –≤ IP-–∞–¥—Ä–µ—Å
try:
    ip_address = socket.gethostbyname(target_host)
except socket.gaierror:
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP –¥–ª—è '{target_host}'. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
    sys.exit()

# –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
first_port = 1
last_port = 65535  # –ú–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1024

print(
    f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É {target_host} ({ip_address}) –Ω–∞ –ø–æ—Ä—Ç—ã –æ—Ç {first_port} –¥–æ {last_port}."
)


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞
def check_port(port_number):
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(1)
        result = s.connect_ex((ip_address, port_number))
        s.close()
        return port_number if result == 0 else None
    except Exception:
        return None


active_ports = []

try:
    # –°–æ–∑–¥–∞–µ–º –ø—É–ª –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    with ThreadPoolExecutor(max_workers=100) as pool:
        tasks = {
            pool.submit(check_port, port): port
            for port in range(first_port, last_port + 1)
        }

        with tqdm(total=last_port - first_port + 1, desc="–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤") as progress:
            for task in as_completed(tasks):
                port = tasks[task]
                try:
                    outcome = task.result()
                    if outcome:
                        active_ports.append(outcome)
                except Exception as err:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Ä—Ç–∞ {port}: {err}")
                finally:
                    progress.update(1)

except KeyboardInterrupt:
    print("\n‚õîÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –≤—Ä—É—á–Ω—É—é.")
    sys.exit()
except socket.error as sock_err:
    print(f"üì° –û—à–∏–±–∫–∞ —Å–æ–∫–µ—Ç–∞: {sock_err}")
    sys.exit()

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
active_ports.sort()
if active_ports:
    print("\n‚úÖ –ù–∞–π–¥–µ–Ω—ã –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:")
    for open_port in active_ports:
        print(f"üü¢ –ü–æ—Ä—Ç {open_port} –¥–æ—Å—Ç—É–ø–µ–Ω")
else:
    print("\nüîí –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ.")

print("‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
